name: Deploy web application
on:
  workflow_dispatch:
    inputs:
      app_name:
        description: Name of the application
        required: true
        type: string
        default: gzabarte
      environment:
        description: Deployment
        required: true
        type: choice
        default: dev
        options:
          - dev
          - stg
          - prd
permissions:
  id-token: write
  contents: read
jobs:
  terraform-bucket-creation:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github
          aws-region: us-west-2
      - name: Run Backend creation script
        run: .github/scripts/create_frontend_bucket.sh ${{ inputs.environment }}
        env:
          s3_bucket: ${{ inputs.environment }}-${{ inputs.app_name }}-tf
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github
          aws-region: us-west-2
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.10.5
      - name: Install Terragrunt
        uses: autero1/action-terragrunt@v3
        with:
          terragrunt-version: 0.80.4
      - name: Frontend deployment
        run: ./.github/scripts/deploy.sh
        env:
          APP_NAME: ${{ inputs.app_name }}
          ENVIRONMENT: ${{ inputs.environment }}
          TF_BUCKET: ${{ inputs.environment }}-${{ inputs.app_name }}-tf
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Build Frontend
        working-directory: source/frontend
        run: |
          npm ci
          npm run build
      - name: Upload Frontend to S3
        working-directory: source/frontend
        run: |
          aws s3 sync ./dist "s3://${{ inputs.environment }}-${{ inputs.app_name }}-frontend" --delete
        env:
          AWS_DEFAULT_REGION: us-west-2
